{"version":3,"file":"static/webpack/static/development/pages/_app.js.2dead3fd76c30234a904.hot-update.js","sources":["webpack:///./components/TakeMyMoney.js"],"sourcesContent":["import React from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\nimport { Mutation } from 'react-apollo';\nimport Router from 'next/router';\nimport NProgress from 'nprogress';\nimport PropTypes from 'prop-types';\nimport gql from 'graphql-tag';\nimport calcTotalPrice from '../lib/calcTotalPrice';\nimport Error from './ErrorMessage';\nimport User, { CURRENT_USER_QUERY } from './User';\n\nconst CREATE_ORDER_MUTATION = gql`\n  mutation createOrder($token: String!) {\n    createOrder(token: $token) {\n      id\n      charge\n      total\n      items {\n        id\n        title\n      }\n    }\n  }\n`;\n\nfunction totalItems(cart) {\n  return cart.reduce((tally, item) => tally + item.quantity, 0);\n}\n\nclass TakeMyMoney extends React.Component {\n  onToken = async (res, createOrder, me) => {\n    NProgress.start();\n    console.log('Stripe: ',res);\n    const order = await createOrder({\n      variables: {\n        token: res.id\n      }\n    })\n    .catch(err => alert(err.message));\n    newrelic.interaction().setAttribute('userId', me.id);\n    newrelic.interaction().setAttribute('cartTotal', `${totalItems(me.cart)}`);\n    Router.push({\n      pathname: '/order',\n      query: { id: order.data.createOrder.id }\n    });\n  };\n  render() {\n    return (\n      <User>\n        {\n          ({ data: { me } }) => (\n          <Mutation\n            mutation={CREATE_ORDER_MUTATION}\n            refetchQueries={[{ query: CURRENT_USER_QUERY }]}\n          >\n            {\n              createOrder => (\n              <StripeCheckout\n                amount={calcTotalPrice(me.cart)}\n                name=\"Nerd Store\"\n                description={`Order of ${totalItems(me.cart)}`}\n                image={\n                  me.cart.length && me.cart[0].item && me.cart[0].item.image\n                }\n                stripeKey={'pk_test_djkdDH15qr5lu7s59lXtSZZi002ATGNg0r'}\n                currency=\"USD\"\n                email={me.email}\n                token={res => this.onToken(res, createOrder, me)}\n              >\n                {this.props.children}\n              </StripeCheckout>\n            )}\n          </Mutation>\n        )}\n      </User>\n    );\n  }\n}\n\nexport default TakeMyMoney;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAaA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAIA;AACA;AADA;AADA;AAKA;AAAA;AACA;AATA;AAGA;AAMA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AACA;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;AAeA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AANA;AA0BA;;;;AA/CA;AACA;AAiDA;;;;A","sourceRoot":""}